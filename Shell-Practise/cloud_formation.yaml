#!/bin/bash

AWSTemplateFormatVersion: '2010-09-09'
Resources:
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC

    MySubnet:
      Type: AWS::EC2::Subnet
      Properties:
        AvailabilityZone: ap-south-1
        CidrBlock: 10.0.0.0/24
        MapPublicIpOnLaunch: false
        VpcId: MyVPC
  Resources:
    MyEC2Instance: null
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0a7cf821b91bcccbc
      InstaceType: t2.micro
      KeyName: mumbai-region
      SecurityGroupIds:
        - Ref MySecurityGroup
    MyElasticIP:
      Type: AWS::EC2::EIP
  Properties:
    InstanceId: Ref <ip>
    MyListener: null
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig:
            StatusCode: '200'
            ContentType: text/plain
            Content: OK
    LoadBalancerArn: Ref MyLoadBalancer
    Port: 80
    Protocol: HTTP

  MyAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: 2
      MinSize: 1
      MaxSize: 3
      VPCZoneIdentifier: Ref 'MyVPC' # Replace with your subnet IDs
      LaunchTemplate:
        Version: GetAtt 'MyEC2Instance.LaunchTemplate.VersionNumber'
        LaunchTemplateName: MyEC2Instance
      TargetGroupARNs:
        - Ref MyTargetGroup
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH and HTTP traffic
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          UserData: Base64 |
          #!/bin/bash